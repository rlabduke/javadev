import java         # to access java.* fully-qualified names
import javax        # to access javax.* fully-qualified names
import driftwood    # to access driftwood.* fully-qualified names
import king         # to access king.* fully-qualified names
from king import *
from king.core import *
from javax.swing import *

class DemoBleach(Plugin):
    """Demonstration plugin that 'bleaches' the point color out of all visible points.
    """
    def __init__(self, toolbox):
        #Plugin.__init__(self, toolbox) -- apparently not needed
        # Jython can't access protected variables in the superclass,
        # so we have to do this stupid hack.
        self.parent = toolbox
        self.kMain = toolbox.kMain
        self.kCanvas = toolbox.kCanvas
        self.services = toolbox.services
    def getToolsMenuItem(self):
        return JMenuItem(self.toString(), actionPerformed=self.activate)
    def toString(self):
        return "Demo: bleach points"
    def activate(self, event):
        kin = self.kMain.getKinemage()
        if kin == None:
            return
        rpi = RecursivePointIterator(kin)
        while rpi.hasNext():
            point = rpi.next()
            if(point.isTotallyOn()):
                point.setColor(None)
        self.kCanvas.repaint()

